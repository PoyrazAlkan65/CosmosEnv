</div>
<script>
    var ismobile=false;
    function textcrop(start, end, text, character) {
        if (typeof (character) == 'object') {
            character = '...'
        }
        if (end > text.length) { end = text.length }
        return ' ' + text.substring(start, end) + character;
    }
    function formatDate(date) {
        if (date != "gÃ¼ncel") {
            var d = new Date(date),
                month = '' + (d.getMonth() + 1),
                day = '' + d.getDate(),
                year = d.getFullYear();

            if (month.length < 2)
                month = '0' + month;
            if (day.length < 2)
                day = '0' + day;

            return [year, month, day].join('-');
        }
        else {
            var d = new Date(),
                month = '' + (d.getMonth() + 1),
                day = '' + d.getDate(),
                year = d.getFullYear();

            if (month.length < 2)
                month = '0' + month;
            if (day.length < 2)
                day = '0' + day;


            return [year, month, day].join('-');
        }

    }

    function isFunction(possibleFunction) {
        return typeof (possibleFunction) === typeof (Function);
    }
    function VEPAAJAX(endpoint, data, CallBackFunctionName = '') {
        var a = undefined;
        if (data != undefined) {
            a = JSON.stringify(data);
        }
        $.ajax({
            type: 'POST',
            data: a,
            async: false,
            contentType: 'application/json',
            url: '{{settings.sourceAjaxUrl}}' + endpoint,
            success: function (data) {
                var c = CallBackFunctionName == '' ? endpoint + '_After' : CallBackFunctionName;
                if (isFunction(window[c]) == true) {
                    var name = window[c];
                    name.call(this, data);
                }
            },
            error: function (data) {
                var c = CallBackFunctionName == '' ? endpoint + '_Error' : CallBackFunctionName;
                if (isFunction(window[c]) == true) {
                    var name = window[c];
                    name.call(this, data);
                }
            }
        });
    }

    $(document).on("click", "#menu-toggle", function () {
        $(".d-flex").toggleClass("toggled");
    })
    $(document).ready(function(){
        if ($(window).width() < 767) {
            ismobile=true;
        }
        else{
            ismobile=false;

        }
    })
    $(window).resize(function(){
        
        if ($(window).width() < 425) {
            if(!ismobile){
                window.location.reload();
            }
            ismobile=true;
        }
        else{
            ismobile=false;

        }
    })
    function getParameterByName(name, url) {

        if (!url) url = window.location.href;
        name = name.replace(/[\[\]]/g, '\\$&');
        var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, ' '));
    }
    var h = getParameterByName("update");
    if (h) {
        alert("kaydedildi");
        window.location.href = window.location.pathname;
    }
    $.fn.DataTable.ext.pager.full_numbers_no_ellipses = function (page, pages) {
        pages = $.fn.DataTable.ext.pager.pagecount;
        var numbers = [];
        var buttons = $.fn.DataTable.ext.pager.numbers_length;
        var half = Math.floor(buttons / 2);

        var _range = function (len, start) {
            var end;

            if (typeof start === "undefined") {
                start = 0;
                end = len;

            } else {
                end = start;
                start = len;
            }

            var out = [];
            for (var i = start; i < end; i++) { out.push(i); }

            return out;
        };


        if (pages <= buttons) {
            numbers = _range(0, pages);

        } else if (page <= half) {
            numbers = _range(0, buttons);

        } else if (page >= pages - 1 - half) {
            numbers = _range(pages - buttons, pages);

        } else {
            numbers = _range(page - half, page + half + 1);
        }

        numbers.DT_el = 'span';

        return ['first', 'previous', numbers, 'next', 'last'];
    };
    $(".datepicker-here").datepicker();
</script>
